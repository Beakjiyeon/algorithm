# 입력 받기
# 규칙 찾기
'''
    dp[1] = (1) = 1
    dp[2] = (1, 1) = 1
    dp[3] = (1, 1, 1), (1, 2), (2, 1) = 3
    dp[4] = (1, 1, 1, 1), (1, 1, 2), (1, 2, 1), (1, 3), (2, 1, 1), (2, 2), (3, 1) = 7
    dp[5] = 13
     (1, 1, 1, 1, 1),
     (1, 1, 1, 2),  (2, 1, 1, 1), (1, 2, 1, 1), (1, 1, 2, 1)
     (1, 2, 2), (2, 2, 1), (2, 1, 2)
     (1, 1, 3), (1, 3, 1), (3, 1, 1)
     (2, 3), (3, 2)
    dp[6] = 23
     (1, 1, 1, 1, 1, 1),
     (1, 1, 1, 1, 2) * 5
     (1, 1, 1, 3) * 4
     (1, 1, 2, 2), (1, 2, 1, 2), (1, 2, 2, 1), (2, 1, 1, 2), (2, 2, 1, 1) 5
     (1, 2, 3) * 6
     (2, 2, 2)
     (3, 3)
     dp[7] =
     (1, 1, 1, 1, 1, 1, 1),

'''

# 규칙 세우기
# 저장된 dp[x] 출력


# 입력 받기
case_count = int(input())
for _ in range(case_count):
    n = int(input())

    # 패턴 찾기

    # 테이블 만들기
    dp = [0] * (n + 1)
    # 초기갑 설정, 점화식 세우기
    for i in range(1, n + 1):
        if i == 1:
            dp[i] = 1
        elif i == 2:
            dp[i] = 2
        elif i == 3:
            dp[i] = 4
        else:
            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3]
    # 결과 출력
    print(dp[n])
