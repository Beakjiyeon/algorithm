def solution():
    n = int(input())
    dp = [0] * (n + 1)  # dp[0] 은 비워 둠
    for i in range(2, n + 1):
        # -1 연산을 사용하는 경우
        # ex. dp[5] 를 -1 만으로 구하는 값은 dp[4] 값에 연산 횟수 1을 추가한 값이다.
        dp[i] = dp[i - 1] + 1

        # 2로 나누어 떨어질 경우
        if i % 2 == 0:
            # -1 연산 방식과 2로 나눈 방식 값을 비교하여 더 적은 연산횟수를 구한다.
            dp[i] = min(dp[i], dp[i//2] + 1) # dp[i//2] = i를 2로 나누었을 때 최소연산 횟수 . +1은 2로 나눈 연산수 +. 메모제이션 방법 쓰기 위함
        # 3으로 나누어 떨어진 경우
        if i % 3 == 0:
            # -1 연산 방식과 3으로 나눈 방식 값을 비교
            dp[i] = min(dp[i], dp[i//3] + 1)
    print(dp[n])


if __name__ == '__main__':
    solution()